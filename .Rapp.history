library('circular')
x <- rvonmises(20, circular(0), 10)
y <- runif(20, 0.5, 1)
plot(x, shrink=2)
lines(x, y)
help runif
?runif
library(movMF)
mu <- rbind(c(-0.251, -0.968),
c(0.399, 0.917))
kappa <- c(4, 4)
theta <- kappa * mu
theta
mu
alpha <- c(0.48, 0.52)
Generate a sample of size n = 50 from the von Mises-Fisher mixture
set.seed(123)
x <- rmovMF(50, theta, alpha)
x
y2 <- movMF(x, 2, nruns = 10)
y2
theta
alpha
table(True = attr(x, "z"), Fitted = predict(y2))
y2cv <- movMF(x, 2, nruns = 10, kappa = list(common = TRUE))
y2cv
table(True = attr(x, "z"), Fitted = predict(y2cv))
y2cf <- movMF(x, 2, nruns = 10, kappa = 4)
sapply(list(y2, y2cf, y2cv), BIC)
library(circular)
data.vm <- rvonmises(n=100, mu=circular(0), kappa=3)
plot(data.vm, stack=TRUE, bins=150)
plot(data.vm, stack=TRUE, bins=150, shrink=1.5)
plot(data.vm, stack=TRUE, bins=150)
plot(data.vm, stack=TRUE, bins=150, shrink=1.5)
y3 <- movMF(data.vm,3, nruns = 10)
x
data.vm
y3 <- movMF(cbind(data.vm,data.vm),3, nruns = 10)
cbind(data.vm,data.vm)
y3 <- movMF(cbind(data.vm,data.vm),3, nruns = 100)
y3 <- movMF(cbind(data.vm,data.vm-1),3, nruns = 100)
y3
y2
theta
mu
install.packages('skmeans')
library(skmeans)
y3 <- skmenas(data.vm,3)
y3 <- skmeans(data.vm,3)
?apply
pol2cart <- function(r, t)#
{#
  x <- r*sin(t)#
  y <- r*cos(t)#
  c(x,y)#
}
?rep
rep(1,10)
size(data.vm)
length(data.vm)
dim(data.vm)
data.cart <- sapply(cbind(rep(1,length(data.vm)),data.vm),pol2cart)
data.cart <- sapply(cbind(rep(1,length(data.vm)),data.vm), pol2cart)
cbind(rep(1,length(data.vm)),data.vm),
cbind(rep(1,length(data.vm)),data.vm)
data.cart <- apply(cbind(rep(1,length(data.vm)),data.vm), 1,pol2cart)
sin(0)
sin(90)
size(pi/3)
Pi
pi
sin(pi/3)
sin(pi/2)
pol2cart(1, 5.994626364)
data.pol <- cbind(rep(1,length(data.vm)),data.vm)
data.cart <- apply(data.pol, 1,pol2cart)
dim(data.pol)
data.cart <- apply(data.pol, 2,pol2cart)
type(data.pol)
class(data.pol)
is.matrix(data.pol)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
dim(x)
is.matrix(x)
dimnames(x)[[1]] <- letters[1:8]
apply(x, 2, mean, trim = .2)
col.sums <- apply(x, 2, sum)
row.sums <- apply(x, 1, sum)
rbind(cbind(x, Rtot = row.sums), Ctot = c(col.sums, sum(col.sums)))
data.pol <- cbind(1,data.vm)
data.pol
pol2cart
data.cart <- apply(data.pol, 2,pol2cart)
pol2car(data.pol[1,])
pol2cart(data.pol[1,])
data.pol[1,]
is.matrix(data.pol)
?cbind
data.pol <- cbind(x1=1,data.vm)
data.pol[1,]
data.cart <- apply(data.pol, 2,pol2cart)
pol2cart(data.pol[1,])
pol2car(1.000000 ,5.794261)
pol2cart(1.000000 ,5.794261)
x
is.data.frame(data.pol)
as.data.frame(data.pol)
data.cart <- apply(as.data.frame(data.pol), 2,pol2cart)
pol2cart(data.pol[1,])
pol2cart(data.pol[2,])
data.pol[1,]
is.matrix(data.pol)
mean
open mean
more mean
?mean
data.cart <- cbind(sin(data.vm),cos(data.vm))
data.cart
y3 <- skmeans(data.cart,3)
y3 <- movMF(cbind(data.cart,data.vm-1),3, nruns = 100)
y3 <- movMF(data.cart,3, nruns = 100)
y3
data.vm <- rmixedvonmises(n=100, mu1 = circular(0), mu2=circular(pi/3),
kappa1=3, kappa2 = 6, prop = 0.4)
data.vm
data.cart <- cbind(sin(data.vm),cos(data.vm))
data.cart <- cbind(cos(data.vm),sin(data.vm))
y3 <- movMF(data.cart,2, nruns = 100)
y3
data.vm <- rmixedvonmises(n=100, mu1 = circular(0), mu2=circular(pi/3),#
kappa1=3, kappa2 = 3, prop = 0.4)#
data.cart <- cbind(cos(data.vm),sin(data.vm))#
#
# fit this using movMF package - bummer, only >= 2D. Craps#
# fit this using skmeans#
#y3 <- skmeans(data.cart,3)#
y3 <- movMF(data.cart,2, nruns = 100)
y3
y3cv <- movMF(data.cart, 2, nruns = 100, kappa = list(common = TRUE))
y3cv
pi/3
y3cf <- movMF(data.cart, 2, nruns = 10, kappa = 3)
y3cf
y3 <- skmeans(data.cart,2)
y3
y3.mean
y3$mean
y3cf$theta / 3
apply(data.cart, 2, mean)
apply(data.cart, 1, mean)
mu <- rbind(c(-0.251, -0.968),#
c(0.399, 0.917))#
kappa <- c(4, 4)#
theta <- kappa * mu#
theta#
alpha <- c(0.48, 0.52)#
## Generate a sample of size n = 50 from the von Mises-Fisher mixture#
## with the above parameters.#
set.seed(123)#
x <- rmovMF(50, theta, alpha)
plot(x[1,],x[2,])
plot(x[,1],x[,2])
apply(x,1,mean)
apply(x,2,mean)
plot(data.cart[,1],data.cart[,2])
library(circular)
library(movMF)
mu <- rbind(c(-0.251, -0.968),
c(0.399, 0.917))
kappa <- c(4, 4)
theta <- kappa * mu
theta
alpha <- c(0.48, 0.52)
mu.rad <- coord2rad(mu)
data.vm <- rmixedvonmises(n=500, mu1 = circular(mu.rad[1]),
mu2 = circular(mu.rad[2]),kappa1= kappa[1], kappa2 = kappa[2], prop = alpha[1])
class(data.vm)
getwd()
setwd('/Users/lun5/Research/github/HE-tumor-object-segmentation/')
setwd('/Users/lun5/Research/github/HE-tumor-object-segmentation/')
data.angles <- read.csv('theta_rand.csv',sep =',', header=T)
is.numeric(data.angles)
as.numeric(data.angle)
as.numeric(data.angles)
as.matrix(data.angles)
aaa <- as.matrix(data.angles)
aaa[1]
aaa[2]
dim(data.angles)
data.angles <- read.csv('theta_rand.csv',sep =',', header=F)
aaa <- as.matrix(data.angles)
aaa[1]
is.numeric(aaa)
cos(aaa)
is.vector(data.angles)
is.matrix(data.angles)
is.circular(data.angles)
aa <- as.vector(data.angles)
aa
aa[1]
sin(aa)
as.circular(data.angles)
class(data.vm)
data.angles <- as.vector(as.circular(data.angles))
data.angles <- t(as.vector(as.circular(data.angles)))
data.cart <- cbind(cos(data.angles),sin(data.angles))
dim(data.cart)
dim(data.angles)
data.angles <- t(as.vector(as.circular(data.angles)))
dim(data.angles)
data.angles <- t(as.circular(data.angles))
dim(data.angles)
data.cart <- cbind(cos(data.angles),sin(data.angles))
dim(data.cart)
num.comps <- 3
y3 <- movMF(data.cart,num.comps, nruns = 10)
y3
data.vm <- data.angles
dev.new()
plot(data.vm,stack=TRUE, bins=150, shrink=1.5,xlim=c(-1.5,1.5))
kappa.fitted = cbind(norm(y3$theta[1,],'2'),norm(y3$theta[2,],'2'))
kappa.fitted
kappa.fitted <- cbind(norm(y3$theta[1,],'2'),norm(y3$theta[2,],'2'),
norm(y3$theta[3,],'2'))
kappa.fitted
mu.fitted = rbind(y3$theta[1,]/kappa.fitted[1], y3$theta[2,]/kappa.fitted[2],
y3$theta[3,]/kappa.fitted[3])
mu.fitted
plot(data.vm,stack=TRUE, bins=150, shrink=1.5,xlim=c(-2.5,2.5))
set.seed(123)#
kappa.fitted <- cbind(norm(y3$theta[1,],'2'),norm(y3$theta[2,],'2'),#
norm(y3$theta[3,],'2'))#
mu.fitted = rbind(y3$theta[1,]/kappa.fitted[1], y3$theta[2,]/kappa.fitted[2],#
 y3$theta[3,]/kappa.fitted[3])#
x1 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[1,1],mu.fitted[1,2])), #
kappa=kappa.fitted[1])#
res25x1 <- density(x1, bw=25)#
lines(res25x1, points.plot=F, col = 4)#
#par(new = T)#
x2 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[2,1],mu.fitted[2,2])), #
kappa=kappa.fitted[2])#
res25x2 <- density(x2, bw=25)#
lines(res25x2, points.plot=F, col = 2)#
#
x3 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[3,1],mu.fitted[3,2])), #
kappa=kappa.fitted[3])#
res25x3 <- density(x2, bw=25)#
lines(res25x3, points.plot=F, col = 2)
mu.fitted
x3 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[3,1],mu.fitted[3,2])), #
kappa=kappa.fitted[3])#
res25x3 <- density(x2, bw=25)#
lines(res25x3, points.plot=F, col = 3)
kappa.fitted
apply(y3$theta, 1, norm)
num.comps <-2#
y3 <- movMF(data.cart,num.comps, nruns = 10)
kappa.fitted <- cbind(norm(y3$theta[1,],'2'),norm(y3$theta[2,],'2')
)
kappa.fitted
mu.fitted = rbind(y3$theta[1,]/kappa.fitted[1], y3$theta[2,]/kappa.fitted[2]
)
dev.new()
plot(data.vm,stack=TRUE, bins=250, shrink=1.5,xlim=c(-2.5,2.5))
x1 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[1,1],mu.fitted[1,2])), #
kappa=kappa.fitted[1])#
res25x1 <- density(x1, bw=25)#
lines(res25x1, points.plot=F, col = 4)#
#par(new = T)#
x2 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[2,1],mu.fitted[2,2])), #
kappa=kappa.fitted[2])#
res25x2 <- density(x2, bw=25)#
lines(res25x2, points.plot=F, col = 2)
num.comps <-3#
y3 <- movMF(data.cart,num.comps, nruns = 10)#
y3cv <- movMF(data.cart, num.comps, nruns = 10, kappa = list(common = TRUE))#
y3cf <- movMF(data.cart, num.comps, nruns = 10, kappa = 4)#
sapply(list(y3, y3cf, y3cv), BIC)#
# plot 2 distribution together#
dev.new()#
plot(data.vm,stack=TRUE, bins=250, shrink=1.5,xlim=c(-2.5,2.5))#
set.seed(123)#
kappa.fitted <- cbind(norm(y3$theta[1,],'2'),norm(y3$theta[2,],'2'),#
norm(y3$theta[3,],'2'))#
mu.fitted = rbind(y3$theta[1,]/kappa.fitted[1], y3$theta[2,]/kappa.fitted[2],#
 y3$theta[3,]/kappa.fitted[3])#
x1 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[1,1],mu.fitted[1,2])), #
kappa=kappa.fitted[1])#
res25x1 <- density(x1, bw=25)#
lines(res25x1, points.plot=F, col = 4)#
#par(new = T)#
x2 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[2,1],mu.fitted[2,2])), #
kappa=kappa.fitted[2])#
res25x2 <- density(x2, bw=25)#
lines(res25x2, points.plot=F, col = 2)#
#
x3 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[3,1],mu.fitted[3,2])), #
kappa=kappa.fitted[3])#
res25x3 <- density(x2, bw=25)#
lines(res25x3, points.plot=F, col = 3)
x3 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[3,1],mu.fitted[3,2])), #
kappa=kappa.fitted[3])#
res25x3 <- density(x2, bw=25)#
lines(res25x3, points.plot=F, col = 3)
kappa.fitted
mu.fitted
data.vm <- read.csv('theta.csv',sep =',', header=F)#
data.vm <- t(as.circular(data.angles))#
data.cart <- cbind(cos(data.angles),sin(data.angles))
data.cart <- cbind(cos(data.vm),sin(data.vm))
num.comps <-3
y3 <- movMF(data.cart,num.comps, nruns = 10)
size(data.vm)
dim(data.vm)
data.vm <- read.csv('theta.csv',sep =',', header=F)
dim(data.vm)
data.vm <- t(as.circular(data.angles))
dim(data.vm)
data.vm <- read.csv('theta.csv',sep =',', header=F)
data.vm <- t(as.circular(data.vm))
dim(data.vm)
data.vm <- rmixedvonmises(n=500, mu1 = circular(mu.rad[1]),
)))
dim(data.vm)
data.cart <- cbind(cos(data.vm),sin(data.vm))
num.comps <-3
y3 <- movMF(data.cart,num.comps, nruns = 10)
kappa.fitted <- cbind(norm(y3$theta[1,],'2'),norm(y3$theta[2,],'2'),#
norm(y3$theta[3,],'2'));kappa.fitted#
mu.fitted = rbind(y3$theta[1,]/kappa.fitted[1], y3$theta[2,]/kappa.fitted[2],#
 y3$theta[3,]/kappa.fitted[3]); mu.fitted
plot 2 distribution together#
dev.new()#
plot(data.vm,stack=TRUE, bins=500, shrink=1.5,xlim=c(-2.5,2.5))#
set.seed(123)#
x1 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[1,1],mu.fitted[1,2])), #
kappa=kappa.fitted[1])#
res25x1 <- density(x1, bw=25)#
lines(res25x1, points.plot=F, col = 4)#
#par(new = T)#
x2 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[2,1],mu.fitted[2,2])), #
kappa=kappa.fitted[2])#
res25x2 <- density(x2, bw=25)#
lines(res25x2, points.plot=F, col = 2)#
#
x3 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[3,1],mu.fitted[3,2])), #
kappa=kappa.fitted[3])#
res25x3 <- density(x2, bw=25)#
lines(res25x3, points.plot=F, col = 3)
set.seed(123)#
x1 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[1,1],mu.fitted[1,2])), #
kappa=kappa.fitted[1])#
res25x1 <- density(x1, bw=25)#
lines(res25x1, points.plot=F, col = 4)#
#par(new = T)#
x2 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[2,1],mu.fitted[2,2])), #
kappa=kappa.fitted[2])#
res25x2 <- density(x2, bw=25)#
lines(res25x2, points.plot=F, col = 2)#
#
x3 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[3,1],mu.fitted[3,2])), #
kappa=kappa.fitted[3])#
res25x3 <- density(x2, bw=25)#
lines(res25x3, points.plot=F, col = 3)
set.seed(13)#
x1 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[1,1],mu.fitted[1,2])), #
kappa=kappa.fitted[1])#
res25x1 <- density(x1, bw=25)#
lines(res25x1, points.plot=F, col = 4)#
#par(new = T)#
x2 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[2,1],mu.fitted[2,2])), #
kappa=kappa.fitted[2])#
res25x2 <- density(x2, bw=25)#
lines(res25x2, points.plot=F, col = 2)#
#
x3 <- rvonmises(n=100, mu=circular(coord2rad(mu.fitted[3,1],mu.fitted[3,2])), #
kappa=kappa.fitted[3])#
res25x3 <- density(x2, bw=25)#
lines(res25x3, points.plot=F, col = 3)
